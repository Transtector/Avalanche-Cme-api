# This docker is used to build the cme application bundle.
#
# Adds Python libraries, external toolsets, and headers
# required to build the cme application.  Pip wheel is then
# used to make a set of wheels which can be bundled into a
# clean docker image used to run the cme application.
#
# Running this image builds the application.  Map volumes
# for the application source files as well as the wheels
# that will be built.
#
#	$ docker run --rm \
#		-v "$(pwd)":/application \
#		-v "$(pwd)"/wheelhouse:/wheelhouse \
#		cme-build
#
# Note: Build this docker in the application/build
# directory to keep the docker context small.  However,
# _run_ this docker from the top-level application
# folder containing the destination 'wheelhouse' folder.

# Uses the cme-base image
FROM cme-base

MAINTAINER James Brunner <james.brunner@smithsmicrowave.com>

# Add development/building tools
# and create python virtual environment
RUN apk add --update \
		build-base \
		linux-headers \
		rrdtool-dev \
		python3-dev && \
		pip install wheel 

# Set up the environment for pip to built wheels location
ENV WHEELHOUSE=/wheelhouse
ENV PIP_WHEEL_DIR=/wheelhouse
ENV PIP_FIND_LINKS=/wheelhouse

# Wheels will build to wheelhouse volume and
# application source files are in /application
VOLUME /wheelhouse
VOLUME /application

# Create and use srcdist/ for the build because wheel
# is adding in extraneous folders (node_modules, cme_venv,
# and .git for example).
ENTRYPOINT mkdir /srcdist; \
	cd /srcdist; \
	cp -R /application/cme .; \
	cp /application/setup.py .; \
	cp /application/VERSION .; \
	cp /application/MANIFEST.in .; \ 
	pip wheel .
